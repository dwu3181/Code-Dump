1. Why is it important for iOS apps to have a signature?
2. How is the signature created?
3. What is the purpose of Apple entitlements?
4. What stops someone from forging a signature?
5. What file type is an application's executable file?
6. How would you figure out which file in an .ipa bundle is the executable file?
7. What is a key-value pair and how is it related to a dictionary data structure?
8. True or False, can you see a app's entitlements in a hex dump of the executable file?
9. What is your best guess at how jtool is able to extract entitlements from app executable files.
10. What stops developers from using any entitlement they want?

1. It's another part of the security process in protecting an app. Signatures must be verified for the process of app creation to complete.
2. The signatures themselves seem to be always generated by Apple.
3. Entitlements allow very specific functions to happen or act as a security measure.
4. Checking the validity of a signature requires knowledge of the public and private key. Only the creator of the signature (should) know(s) the private key, making signatures (theoretically) impossible to forge.
5. Mach-O files.
6. Unzip the .ipa file with the -unzip command. Then, run a find command with the executable flag to search for the executable files from the batch.
7. A key-value pair is just a pair of associated items. The key is identified by the value (ex. key = location, value = Earth). Dictionary data structure relies on key-value pairs to function.
8. True. They can be searched by using the "xxd" command on the executable Mach-O files and searching for patterns in the code to find the entitlements.
9. jtool --ent -arch arm64
10. Entitlement access must be requested and not every entitlement is allowed for public use by any developer.
